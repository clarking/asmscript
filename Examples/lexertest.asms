fn gcd {
	loop (rax != rbx) {
		branch (rax > rbx) {
			rax -= rbx;
		} else {
			rbx -= rax;
		}
	}
}

fn main {
	rax = 12;
	rbx = 18;
	gcd;
	<< rax;
}

fn prime_test {
	rbx = 2;
	loop {
		rcx = rbx * rbx;
		break if rcx > rax;

		rdx = rax % rbx;
		branch (rdx == 0) {
			rax = 0;
			return;
		}
	}

	rax = 1;
}

macro swap(A, B) {
	var tmp = A;
	A = B;
	B = tmp;
}
